{"version":3,"sources":["components/WeeklyPost.tsx","components/FilterNav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WeeklyPost","FilterNav","action","type","name","id","htmlFor","App","iOS","navigator","test","userAgent","useState","mobileOpen","setMobileOpen","handleFilterToggle","className","onClick","Hidden","mdUp","SwipeableDrawer","variant","anchor","open","onOpen","onClose","disableBackdropTransition","disableDiscovery","ModalProps","keepMounted","smDown","Drawer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAkCeA,EAhCI,WACjB,OACE,oCACE,sCACA,wCACA,+BACE,mCACA,mCACA,sCAEF,uDACA,+BACE,mCACA,mCACA,sCAEF,qDACA,+BACE,oCACA,oCACA,uCAEF,qDACA,+BACE,qCACA,qCACA,8CCHOC,EAvBG,WAChB,OACE,uBAAMC,OAAO,GAAb,UACE,wCACA,+BACE,+BACE,uBAAOC,KAAK,OAAOC,KAAK,WAAWC,GAAG,aACtC,uBAAOC,QAAQ,WAAf,2BAEF,+BACE,uBAAOH,KAAK,OAAOC,KAAK,SAASC,GAAG,WACpC,uBAAOC,QAAQ,SAAf,yBAEF,+BACE,uBAAOH,KAAK,OAAOC,KAAK,aAAaC,GAAG,eACxC,uBAAOC,QAAQ,aAAf,+BAGJ,wBAAQH,KAAK,SAAb,+B,uBCkCSI,EA/CH,WAEV,IAAMC,EAA2B,qBAAdC,WAA6B,mBAAmBC,KAAKD,UAAUE,WAFlE,EAGoBC,oBAAS,GAH7B,mBAGTC,EAHS,KAGGC,EAHH,KAKVC,EAAqB,WACzBD,GAAeD,IAGjB,OACE,sBAAKG,UAAU,MAAf,UACE,oDACA,wBAAQA,UAAU,YAAYC,QAASF,EAAvC,qBAEA,cAACG,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,OAAO,QACPC,KAAMV,EACNW,OAAQ,kBAAMV,GAAc,IAC5BW,QAASV,EACTW,2BAA4BlB,EAAKmB,iBAAkBnB,EACnDoB,WAAY,CACVC,aAAa,GAEfb,UAAU,aAVZ,SAYE,cAAC,EAAD,QAGJ,cAACE,EAAA,EAAD,CAAQY,QAAM,EAAd,SACE,cAACC,EAAA,EAAD,CACEV,QAAQ,YACRC,OAAO,QACPC,MAAI,EACJP,UAAU,aAJZ,SAME,cAAC,EAAD,QAIJ,cAAC,EAAD,IACA,0DCnCSgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.03946d83.chunk.js","sourcesContent":["\r\n\r\nconst WeeklyPost = () => {\r\n  return (\r\n    <article>\r\n      <h2>date</h2>\r\n      <h3>habits</h3>\r\n      <ul>\r\n        <li>1</li>\r\n        <li>2</li>\r\n        <li>3</li>\r\n      </ul>\r\n      <h3>What did I accomplish</h3>\r\n      <ul>\r\n        <li>a</li>\r\n        <li>b</li>\r\n        <li>c</li>\r\n      </ul>\r\n      <h3>What didn't go well</h3>\r\n      <ul>\r\n        <li>do</li>\r\n        <li>re</li>\r\n        <li>mi</li>\r\n      </ul>\r\n      <h3>Goals for next week</h3>\r\n      <ul>\r\n        <li>one</li>\r\n        <li>two</li>\r\n        <li>three</li>\r\n      </ul>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default WeeklyPost;","\r\n\r\nconst FilterNav = () => {\r\n  return (\r\n    <form action=\"\">\r\n      <h4>filter</h4>\r\n      <ul>\r\n        <li>\r\n          <input type=\"text\" name=\"dateFrom\" id=\"dateFrom\" />\r\n          <label htmlFor=\"dateFrom\">date from:</label>\r\n        </li>\r\n        <li>\r\n          <input type=\"text\" name=\"dateTo\" id=\"dateTo\" />\r\n          <label htmlFor=\"dateTo\">date to:</label>\r\n        </li>\r\n        <li>\r\n          <input type=\"text\" name=\"promptType\" id=\"promptType\" />\r\n          <label htmlFor=\"promptType\">prompt type</label>\r\n        </li>\r\n      </ul>\r\n      <button type=\"submit\">apply filters</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default FilterNav;","import React from 'react';\r\nimport './App.css';\r\nimport WeeklyPost from './components/WeeklyPost';\r\nimport FilterNav from './components/FilterNav';\r\nimport { useState } from 'react';\r\nimport { Hidden, Drawer, SwipeableDrawer } from '@material-ui/core';\r\n\r\nconst App = () => {\r\n  // const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  const iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  \r\n  const handleFilterToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Weekly Reflections</h1>\r\n      <button className=\"filterBtn\" onClick={handleFilterToggle}>Filters</button>\r\n\r\n      <Hidden mdUp>\r\n        <SwipeableDrawer\r\n          variant=\"temporary\"\r\n          anchor=\"right\"\r\n          open={mobileOpen}\r\n          onOpen={() => setMobileOpen(true)}\r\n          onClose={handleFilterToggle}\r\n          disableBackdropTransition={!iOS} disableDiscovery={iOS}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          className=\"navSidebar\"\r\n        >\r\n          <FilterNav />\r\n        </SwipeableDrawer>\r\n      </Hidden>\r\n      <Hidden smDown>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          anchor=\"right\"\r\n          open\r\n          className=\"navSidebar\"\r\n        >\r\n          <FilterNav />\r\n        </Drawer>\r\n      </Hidden>\r\n\r\n      <WeeklyPost />\r\n      <button>Show Older Posts</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}